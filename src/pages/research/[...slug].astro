---
import { type CollectionEntry, getCollection } from "astro:content";
import Base from "../../layouts/Base.astro";
import FormattedDate from "../../components/FormattedDate.astro";
import "katex/dist/katex.min.css";
import { metaData } from "../../config";

export async function getStaticPaths() {
  const publications = await getCollection("publications");
  return publications.map((publication) => ({
    params: { slug: publication.slug },
    props: publication,
  }));
}
type Props = CollectionEntry<"publications">;

import { getImagePath } from "astro-opengraph-images";
const publication = Astro.props;
const { url, site } = Astro;
const openGraphImageUrl = getImagePath({ url, site });

const { Content } = await publication.render();
---

<Base title={publication.data.title} description={publication.data.summary}>
  <section>
    <script
      type="application/ld+json"
      set:html={JSON.stringify({
        "@context": "https://schema.org",
        "@type": "Blogpublicationing",
        headline: publication.data.title,
        datePublished: publication.data.publishedAt,
        dateModified: publication.data.publishedAt,
        description: publication.data.summary,
        image: openGraphImageUrl,
        url: url,
        author: {
          "@type": "Person",
          name: metaData.name,
        },
      })}
    />
    <h1 class="title mb-3 font-medium text-2xl tracking-tight">
      {publication.data.title}
    </h1>
    <div class="flex justify-between items-center mt-2 mb-8 text-medium">
      <p class="text-sm text-neutral-600 dark:text-neutral-400">
        <FormattedDate date={publication.data.publishedAt} includeRelative={false} />
      </p>
    </div>
    <article class="prose prose-quoteless prose-neutral dark:prose-invert">
      <Content />
    </article>
  </section>
</Base>
